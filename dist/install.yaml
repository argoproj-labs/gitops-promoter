apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: promoter
    control-plane: controller-manager
  name: promoter-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: changetransferpolicies.promoter.argoproj.io
spec:
  group: promoter.argoproj.io
  names:
    kind: ChangeTransferPolicy
    listKind: ChangeTransferPolicyList
    plural: changetransferpolicies
    singular: changetransferpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.active.dry.sha
      name: Active Dry Sha
      type: string
    - jsonPath: .status.proposed.dry.sha
      name: Proposed Dry Sha
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ChangeTransferPolicy is the Schema for the changetransferpolicies
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ChangeTransferPolicySpec defines the desired state of ChangeTransferPolicy
            properties:
              activeBranch:
                description: ActiveBranch staging hydrated branch
                type: string
              activeCommitStatuses:
                description: ActiveCommitStatuses lists the statuses to be monitored
                  on the active branch
                items:
                  properties:
                    key:
                      pattern: (([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?
                      type: string
                  required:
                  - key
                  type: object
                type: array
              gitRepositoryRef:
                description: RepositoryReference what repository to open the PR on.
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
              proposedBranch:
                description: ProposedBranch staging hydrated branch
                type: string
              proposedCommitStatuses:
                description: ProposedCommitStatuses lists the statuses to be monitored
                  on the proposed branch
                items:
                  properties:
                    key:
                      pattern: (([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?
                      type: string
                  required:
                  - key
                  type: object
                type: array
            required:
            - activeBranch
            - gitRepositoryRef
            - proposedBranch
            type: object
          status:
            description: ChangeTransferPolicyStatus defines the observed state of
              ChangeTransferPolicy
            properties:
              active:
                properties:
                  commitStatuses:
                    items:
                      properties:
                        key:
                          description: Key staging hydrated branch
                          type: string
                        phase:
                          description: Phase what phase is the status in
                          enum:
                          - pending
                          - success
                          - failure
                          type: string
                      required:
                      - key
                      - phase
                      type: object
                    type: array
                  dry:
                    properties:
                      commitTime:
                        format: date-time
                        type: string
                      sha:
                        type: string
                    type: object
                  hydrated:
                    properties:
                      commitTime:
                        format: date-time
                        type: string
                      sha:
                        type: string
                    type: object
                type: object
              proposed:
                description: |-
                  INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                properties:
                  commitStatuses:
                    items:
                      properties:
                        key:
                          description: Key staging hydrated branch
                          type: string
                        phase:
                          description: Phase what phase is the status in
                          enum:
                          - pending
                          - success
                          - failure
                          type: string
                      required:
                      - key
                      - phase
                      type: object
                    type: array
                  dry:
                    properties:
                      commitTime:
                        format: date-time
                        type: string
                      sha:
                        type: string
                    type: object
                  hydrated:
                    properties:
                      commitTime:
                        format: date-time
                        type: string
                      sha:
                        type: string
                    type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: commitstatuses.promoter.argoproj.io
spec:
  group: promoter.argoproj.io
  names:
    kind: CommitStatus
    listKind: CommitStatusList
    plural: commitstatuses
    singular: commitstatus
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.sha
      name: Sha
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CommitStatus is the Schema for the commitstatuses API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: CommitStatusSpec defines the desired state of CommitStatus
            properties:
              description:
                type: string
              gitRepositoryRef:
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
              name:
                type: string
              phase:
                default: pending
                enum:
                - pending
                - success
                - failure
                type: string
              sha:
                type: string
              url:
                type: string
            required:
            - description
            - gitRepositoryRef
            - name
            - phase
            - sha
            - url
            type: object
          status:
            description: CommitStatusStatus defines the observed state of CommitStatus
            properties:
              id:
                type: string
              observedGeneration:
                description: |-
                  INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                format: int64
                type: integer
              phase:
                default: pending
                enum:
                - pending
                - success
                - failure
                type: string
              sha:
                type: string
            required:
            - id
            - observedGeneration
            - phase
            - sha
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: gitrepositories.promoter.argoproj.io
spec:
  group: promoter.argoproj.io
  names:
    kind: GitRepository
    listKind: GitRepositoryList
    plural: gitrepositories
    singular: gitrepository
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GitRepository is the Schema for the gitrepositories API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: GitRepositorySpec defines the desired state of GitRepository
            properties:
              name:
                type: string
              owner:
                type: string
              scmProviderRef:
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
            required:
            - name
            - owner
            - scmProviderRef
            type: object
          status:
            description: GitRepositoryStatus defines the observed state of GitRepository
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: promotionstrategies.promoter.argoproj.io
spec:
  group: promoter.argoproj.io
  names:
    kind: PromotionStrategy
    listKind: PromotionStrategyList
    plural: promotionstrategies
    singular: promotionstrategy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.active.dry.sha
      name: Active Dry Sha
      type: string
    - jsonPath: .status.proposed.dry.sha
      name: Proposed Dry Sha
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PromotionStrategy is the Schema for the promotionstrategies API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PromotionStrategySpec defines the desired state of PromotionStrategy
            properties:
              activeCommitStatuses:
                items:
                  properties:
                    key:
                      pattern: (([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?
                      type: string
                  required:
                  - key
                  type: object
                type: array
              dryBranch:
                type: string
              environments:
                items:
                  properties:
                    activeCommitStatuses:
                      items:
                        properties:
                          key:
                            pattern: (([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    autoMerge:
                      default: true
                      type: boolean
                    branch:
                      type: string
                    proposedCommitStatuses:
                      items:
                        properties:
                          key:
                            pattern: (([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                  required:
                  - branch
                  type: object
                minItems: 1
                type: array
              gitRepositoryRef:
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
              proposedCommitStatuses:
                items:
                  properties:
                    key:
                      pattern: (([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?
                      type: string
                  required:
                  - key
                  type: object
                type: array
            required:
            - dryBranch
            - environments
            - gitRepositoryRef
            type: object
          status:
            description: PromotionStrategyStatus defines the observed state of PromotionStrategy
            properties:
              environments:
                items:
                  properties:
                    active:
                      properties:
                        commitStatus:
                          properties:
                            phase:
                              enum:
                              - pending
                              - success
                              - failure
                              type: string
                            sha:
                              type: string
                          required:
                          - phase
                          - sha
                          type: object
                        dry:
                          properties:
                            commitTime:
                              format: date-time
                              type: string
                            sha:
                              type: string
                          type: object
                        hydrated:
                          properties:
                            commitTime:
                              format: date-time
                              type: string
                            sha:
                              type: string
                          type: object
                      required:
                      - commitStatus
                      - dry
                      - hydrated
                      type: object
                    branch:
                      type: string
                    lastHealthyDryShas:
                      items:
                        properties:
                          sha:
                            type: string
                          time:
                            format: date-time
                            type: string
                        required:
                        - sha
                        - time
                        type: object
                      type: array
                    proposed:
                      properties:
                        commitStatus:
                          properties:
                            phase:
                              enum:
                              - pending
                              - success
                              - failure
                              type: string
                            sha:
                              type: string
                          required:
                          - phase
                          - sha
                          type: object
                        dry:
                          properties:
                            commitTime:
                              format: date-time
                              type: string
                            sha:
                              type: string
                          type: object
                        hydrated:
                          properties:
                            commitTime:
                              format: date-time
                              type: string
                            sha:
                              type: string
                          type: object
                      required:
                      - commitStatus
                      - dry
                      - hydrated
                      type: object
                  required:
                  - active
                  - branch
                  - proposed
                  type: object
                type: array
            required:
            - environments
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: pullrequests.promoter.argoproj.io
spec:
  group: promoter.argoproj.io
  names:
    kind: PullRequest
    listKind: PullRequestList
    plural: pullrequests
    singular: pullrequest
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.id
      name: ID
      type: string
    - jsonPath: .status.state
      name: State
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PullRequest is the Schema for the pullrequests API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PullRequestSpec defines the desired state of PullRequest
            properties:
              description:
                description: Body the description body of the pull/merge request
                type: string
              gitRepositoryRef:
                description: RepositoryReference what repository to open the PR on.
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
              sourceBranch:
                description: Base the git reference that we are merging into Head
                  ---> Base
                type: string
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              state:
                default: open
                description: State of the merge request closed/merged/open
                type: string
              targetBranch:
                description: Head the git reference we are merging from Head --->
                  Base
                type: string
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              title:
                description: Title is the title of the pull request.
                type: string
            required:
            - gitRepositoryRef
            - sourceBranch
            - state
            - targetBranch
            - title
            type: object
          status:
            description: PullRequestStatus defines the observed state of PullRequest
            properties:
              id:
                description: ID the id of the pull request
                type: string
              observedGeneration:
                description: ObservedGeneration the generation observed by the controller
                format: int64
                type: integer
              prCreationTime:
                description: PRCreationTime the time the PR was created
                format: date-time
                type: string
              state:
                description: State of the merge request closed/merged/open
                type: string
            required:
            - observedGeneration
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: revertcommits.promoter.argoproj.io
spec:
  group: promoter.argoproj.io
  names:
    kind: RevertCommit
    listKind: RevertCommitList
    plural: revertcommits
    singular: revertcommit
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RevertCommit is the Schema for the revertcommits API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RevertCommitSpec defines the desired state of RevertCommit
            properties:
              foo:
                description: Foo is an example field of RevertCommit. Edit revertcommit_types.go
                  to remove/update
                type: string
            type: object
          status:
            description: RevertCommitStatus defines the observed state of RevertCommit
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: scmproviders.promoter.argoproj.io
spec:
  group: promoter.argoproj.io
  names:
    kind: ScmProvider
    listKind: ScmProviderList
    plural: scmproviders
    singular: scmprovider
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ScmProvider is the Schema for the scmproviders API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ScmProviderSpec defines the desired state of ScmProvider
            properties:
              fake:
                description: Fake required configuration for Fake as the SCM provider
                properties:
                  domain:
                    type: string
                type: object
              github:
                description: GitHub required configuration for GitHub as the SCM provider
                properties:
                  domain:
                    type: string
                type: object
              secretRef:
                description: SecretRef contains the credentials required to auth to
                  a specific provider
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
            type: object
          status:
            description: ScmProviderStatus defines the observed state of ScmProvider
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: promoter
  name: promoter-controller-manager
  namespace: promoter-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: promoter
  name: promoter-leader-election-role
  namespace: promoter-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: promoter-manager-role
rules:
- apiGroups:
  - promoter.argoproj.io
  resources:
  - changetransferpolicies
  - commitstatuses
  - gitrepositories
  - promotionstrategies
  - pullrequests
  - revertcommits
  - scmproviders
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - promoter.argoproj.io
  resources:
  - changetransferpolicies/finalizers
  - commitstatuses/finalizers
  - gitrepositories/finalizers
  - promotionstrategies/finalizers
  - pullrequests/finalizers
  - revertcommits/finalizers
  - scmproviders/finalizers
  verbs:
  - update
- apiGroups:
  - promoter.argoproj.io
  resources:
  - changetransferpolicies/status
  - commitstatuses/status
  - gitrepositories/status
  - promotionstrategies/status
  - pullrequests/status
  - revertcommits/status
  - scmproviders/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: promoter
  name: promoter-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: promoter
  name: promoter-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: promoter
  name: promoter-leader-election-rolebinding
  namespace: promoter-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: promoter-leader-election-role
subjects:
- kind: ServiceAccount
  name: promoter-controller-manager
  namespace: promoter-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: promoter
  name: promoter-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: promoter-manager-role
subjects:
- kind: ServiceAccount
  name: promoter-controller-manager
  namespace: promoter-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: promoter
  name: promoter-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: promoter-proxy-role
subjects:
- kind: ServiceAccount
  name: promoter-controller-manager
  namespace: promoter-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: promoter
    control-plane: controller-manager
  name: promoter-controller-manager-metrics-service
  namespace: promoter-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: promoter
    control-plane: controller-manager
  name: promoter-controller-manager
  namespace: promoter-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: manager
              topologyKey: kubernetes.io/hostname
            weight: 100
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: deployment
              topologyKey: kubernetes.io/hostname
            weight: 5
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: quay.io/brancz/kube-rbac-proxy:v0.17.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: quay.io/argoprojlabs/gitops-promoter:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: promoter-controller-manager
      terminationGracePeriodSeconds: 10
