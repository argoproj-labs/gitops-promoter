apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: promoter
    control-plane: controller-manager
  name: promoter-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: argocdcommitstatuses.promoter.argoproj.io
spec:
  group: promoter.argoproj.io
  names:
    kind: ArgoCDCommitStatus
    listKind: ArgoCDCommitStatusList
    plural: argocdcommitstatuses
    singular: argocdcommitstatus
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ArgoCDCommitStatus is the Schema for the argocdcommitstatuses
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ArgoCDCommitStatusSpec defines the desired state of ArgoCDCommitStatus.
            properties:
              applicationSelector:
                description: |-
                  A label selector is a label query over a set of resources. The result of matchLabels and
                  matchExpressions are ANDed. An empty label selector matches all objects. A null
                  label selector matches no objects.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              promotionStrategyRef:
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
            required:
            - applicationSelector
            - promotionStrategyRef
            type: object
          status:
            description: ArgoCDCommitStatusStatus defines the observed state of ArgoCDCommitStatus.
            properties:
              applicationsSelected:
                description: |-
                  INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                items:
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    name:
                      type: string
                    namespace:
                      type: string
                    phase:
                      type: string
                    sha:
                      type: string
                  required:
                  - name
                  - namespace
                  - phase
                  - sha
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: changetransferpolicies.promoter.argoproj.io
spec:
  group: promoter.argoproj.io
  names:
    kind: ChangeTransferPolicy
    listKind: ChangeTransferPolicyList
    plural: changetransferpolicies
    singular: changetransferpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.active.dry.sha
      name: Active Dry Sha
      type: string
    - jsonPath: .status.proposed.dry.sha
      name: Proposed Dry Sha
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ChangeTransferPolicy is the Schema for the changetransferpolicies
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ChangeTransferPolicySpec defines the desired state of ChangeTransferPolicy
            properties:
              activeBranch:
                description: ActiveBranch staging hydrated branch
                type: string
              activeCommitStatuses:
                description: ActiveCommitStatuses lists the statuses to be monitored
                  on the active branch
                items:
                  properties:
                    key:
                      pattern: (([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?
                      type: string
                  required:
                  - key
                  type: object
                type: array
              autoMerge:
                default: true
                type: boolean
              gitRepositoryRef:
                description: RepositoryReference what repository to open the PR on.
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
              proposedBranch:
                description: ProposedBranch staging hydrated branch
                type: string
              proposedCommitStatuses:
                description: ProposedCommitStatuses lists the statuses to be monitored
                  on the proposed branch
                items:
                  properties:
                    key:
                      pattern: (([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?
                      type: string
                  required:
                  - key
                  type: object
                type: array
            required:
            - activeBranch
            - gitRepositoryRef
            - proposedBranch
            type: object
          status:
            description: ChangeTransferPolicyStatus defines the observed state of
              ChangeTransferPolicy
            properties:
              active:
                properties:
                  commitStatuses:
                    items:
                      properties:
                        key:
                          description: Key staging hydrated branch
                          type: string
                        phase:
                          description: Phase what phase is the status in
                          enum:
                          - pending
                          - success
                          - failure
                          type: string
                      required:
                      - key
                      - phase
                      type: object
                    type: array
                  dry:
                    properties:
                      commitTime:
                        format: date-time
                        type: string
                      sha:
                        type: string
                    type: object
                  hydrated:
                    properties:
                      commitTime:
                        format: date-time
                        type: string
                      sha:
                        type: string
                    type: object
                type: object
              proposed:
                description: |-
                  INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                properties:
                  commitStatuses:
                    items:
                      properties:
                        key:
                          description: Key staging hydrated branch
                          type: string
                        phase:
                          description: Phase what phase is the status in
                          enum:
                          - pending
                          - success
                          - failure
                          type: string
                      required:
                      - key
                      - phase
                      type: object
                    type: array
                  dry:
                    properties:
                      commitTime:
                        format: date-time
                        type: string
                      sha:
                        type: string
                    type: object
                  hydrated:
                    properties:
                      commitTime:
                        format: date-time
                        type: string
                      sha:
                        type: string
                    type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: commitstatuses.promoter.argoproj.io
spec:
  group: promoter.argoproj.io
  names:
    kind: CommitStatus
    listKind: CommitStatusList
    plural: commitstatuses
    singular: commitstatus
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.sha
      name: Sha
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CommitStatus is the Schema for the commitstatuses API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: CommitStatusSpec defines the desired state of CommitStatus
            properties:
              description:
                type: string
              gitRepositoryRef:
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
              name:
                type: string
              phase:
                default: pending
                enum:
                - pending
                - success
                - failure
                type: string
              sha:
                type: string
              url:
                description: Url is a URL that the user can follow to see more details
                  about the status
                type: string
            required:
            - description
            - gitRepositoryRef
            - name
            - phase
            - sha
            - url
            type: object
          status:
            description: CommitStatusStatus defines the observed state of CommitStatus
            properties:
              id:
                description: Id is the unique identifier of the commit status, set
                  by the SCM
                type: string
              observedGeneration:
                description: |-
                  INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                format: int64
                type: integer
              phase:
                default: pending
                enum:
                - pending
                - success
                - failure
                type: string
              sha:
                type: string
            required:
            - id
            - observedGeneration
            - phase
            - sha
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: controllerconfigurations.promoter.argoproj.io
spec:
  group: promoter.argoproj.io
  names:
    kind: ControllerConfiguration
    listKind: ControllerConfigurationList
    plural: controllerconfigurations
    singular: controllerconfiguration
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ControllerConfiguration is the Schema for the controllerconfigurations
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ControllerConfigurationSpec defines the desired state of
              ControllerConfiguration.
            properties:
              pullRequest:
                properties:
                  template:
                    properties:
                      description:
                        description: |-
                          Template used to generate the description of the pull request.
                          Uses Go template syntax and Sprig functions are available.
                        type: string
                      title:
                        description: |-
                          Template used to generate the title of the pull request.
                          Uses Go template syntax and Sprig functions are available.
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: ControllerConfigurationStatus defines the observed state
              of ControllerConfiguration.
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: gitrepositories.promoter.argoproj.io
spec:
  group: promoter.argoproj.io
  names:
    kind: GitRepository
    listKind: GitRepositoryList
    plural: gitrepositories
    singular: gitrepository
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GitRepository is the Schema for the gitrepositories API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: GitRepositorySpec defines the desired state of GitRepository
            properties:
              fake:
                properties:
                  name:
                    type: string
                  owner:
                    type: string
                required:
                - name
                - owner
                type: object
              github:
                properties:
                  name:
                    type: string
                  owner:
                    type: string
                required:
                - name
                - owner
                type: object
              gitlab:
                properties:
                  name:
                    description: Project slug of the repository.
                    pattern: ^[a-zA-Z0-9_\-\/.]+$
                    type: string
                  namespace:
                    description: User, group or group with subgroup (e.g. group/subgroup).
                    pattern: ^[a-zA-Z0-9_\-\/.]+$
                    type: string
                  projectId:
                    type: integer
                required:
                - name
                - namespace
                - projectId
                type: object
              scmProviderRef:
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
            required:
            - scmProviderRef
            type: object
          status:
            description: GitRepositoryStatus defines the observed state of GitRepository
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: promotionstrategies.promoter.argoproj.io
spec:
  group: promoter.argoproj.io
  names:
    kind: PromotionStrategy
    listKind: PromotionStrategyList
    plural: promotionstrategies
    singular: promotionstrategy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.active.dry.sha
      name: Active Dry Sha
      type: string
    - jsonPath: .status.proposed.dry.sha
      name: Proposed Dry Sha
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PromotionStrategy is the Schema for the promotionstrategies API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PromotionStrategySpec defines the desired state of PromotionStrategy
            properties:
              activeCommitStatuses:
                description: |-
                  ActiveCommitStatuses are commit statuses describing an actively running dry commit. If an active commit status
                  is failing for an environment, subsequent environments will not deploy the failing commit.

                  The commit statuses specified in this field apply to all environments in the promotion sequence. You can also
                  specify commit statuses for individual environments in the `environments` field.
                items:
                  properties:
                    key:
                      pattern: (([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?
                      type: string
                  required:
                  - key
                  type: object
                type: array
              environments:
                description: Environments is the sequence of environments that a dry
                  commit will be promoted through.
                items:
                  properties:
                    activeCommitStatuses:
                      description: |-
                        ActiveCommitStatuses are commit statuses describing an actively running dry commit. If an active commit status
                        is failing for an environment, subsequent environments will not deploy the failing commit.

                        The commit statuses specified in this field apply to this environment only. You can also specify commit statuses
                        for all environments in the `spec.activeCommitStatuses` field.
                      items:
                        properties:
                          key:
                            pattern: (([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                    autoMerge:
                      default: true
                      description: |-
                        AutoMerge determines whether the dry commit should be automatically merged into the next branch in the sequence.
                        If false, the dry commit will be proposed but not merged.
                      type: boolean
                    branch:
                      type: string
                    proposedCommitStatuses:
                      description: |-
                        ProposedCommitStatuses are commit statuses describing a proposed dry commit, i.e. one that is not yet running
                        in a live environment. If a proposed commit status is failing for a given environment, the dry commit will not
                        be promoted to that environment.

                        The commit statuses specified in this field apply to this environment only. You can also specify commit statuses
                        for all environments in the `spec.proposedCommitStatuses` field.
                      items:
                        properties:
                          key:
                            pattern: (([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?
                            type: string
                        required:
                        - key
                        type: object
                      type: array
                  required:
                  - branch
                  type: object
                minItems: 1
                type: array
              gitRepositoryRef:
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
              proposedCommitStatuses:
                description: |-
                  ProposedCommitStatuses are commit statuses describing a proposed dry commit, i.e. one that is not yet running
                  in a live environment. If a proposed commit status is failing for a given environment, the dry commit will not
                  be promoted to that environment.

                  The commit statuses specified in this field apply to all environments in the promotion sequence. You can also
                  specify commit statuses for individual environments in the `environments` field.
                items:
                  properties:
                    key:
                      pattern: (([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?
                      type: string
                  required:
                  - key
                  type: object
                type: array
            required:
            - environments
            - gitRepositoryRef
            type: object
          status:
            description: PromotionStrategyStatus defines the observed state of PromotionStrategy
            properties:
              environments:
                items:
                  properties:
                    active:
                      properties:
                        commitStatus:
                          properties:
                            phase:
                              enum:
                              - pending
                              - success
                              - failure
                              type: string
                            sha:
                              type: string
                          required:
                          - phase
                          - sha
                          type: object
                        dry:
                          properties:
                            commitTime:
                              format: date-time
                              type: string
                            sha:
                              type: string
                          type: object
                        hydrated:
                          properties:
                            commitTime:
                              format: date-time
                              type: string
                            sha:
                              type: string
                          type: object
                      required:
                      - commitStatus
                      - dry
                      - hydrated
                      type: object
                    branch:
                      type: string
                    lastHealthyDryShas:
                      items:
                        properties:
                          sha:
                            type: string
                          time:
                            description: 'FIXME: docs, is this commit time, first-became-healthy
                              time, most-recently-observed-healthy time, etc?'
                            format: date-time
                            type: string
                        required:
                        - sha
                        - time
                        type: object
                      type: array
                    proposed:
                      properties:
                        commitStatus:
                          properties:
                            phase:
                              enum:
                              - pending
                              - success
                              - failure
                              type: string
                            sha:
                              type: string
                          required:
                          - phase
                          - sha
                          type: object
                        dry:
                          properties:
                            commitTime:
                              format: date-time
                              type: string
                            sha:
                              type: string
                          type: object
                        hydrated:
                          properties:
                            commitTime:
                              format: date-time
                              type: string
                            sha:
                              type: string
                          type: object
                      required:
                      - commitStatus
                      - dry
                      - hydrated
                      type: object
                  required:
                  - active
                  - branch
                  - proposed
                  type: object
                type: array
            required:
            - environments
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: pullrequests.promoter.argoproj.io
spec:
  group: promoter.argoproj.io
  names:
    kind: PullRequest
    listKind: PullRequestList
    plural: pullrequests
    singular: pullrequest
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.id
      name: ID
      type: string
    - jsonPath: .status.state
      name: State
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PullRequest is the Schema for the pullrequests API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PullRequestSpec defines the desired state of PullRequest
            properties:
              description:
                description: Body the description body of the pull/merge request
                type: string
              gitRepositoryRef:
                description: RepositoryReference what repository to open the PR on.
                properties:
                  name:
                    type: string
                required:
                - name
                type: object
              sourceBranch:
                description: Base the git reference that we are merging into Head
                  ---> Base
                type: string
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              state:
                default: open
                description: State of the merge request closed/merged/open
                type: string
              targetBranch:
                description: Head the git reference we are merging from Head --->
                  Base
                type: string
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              title:
                description: Title is the title of the pull request.
                type: string
            required:
            - gitRepositoryRef
            - sourceBranch
            - state
            - targetBranch
            - title
            type: object
          status:
            description: PullRequestStatus defines the observed state of PullRequest
            properties:
              id:
                description: ID the id of the pull request
                type: string
              observedGeneration:
                description: ObservedGeneration the generation observed by the controller
                format: int64
                type: integer
              prCreationTime:
                description: PRCreationTime the time the PR was created
                format: date-time
                type: string
              state:
                description: State of the merge request closed/merged/open
                type: string
            required:
            - observedGeneration
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: revertcommits.promoter.argoproj.io
spec:
  group: promoter.argoproj.io
  names:
    kind: RevertCommit
    listKind: RevertCommitList
    plural: revertcommits
    singular: revertcommit
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RevertCommit is the Schema for the revertcommits API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RevertCommitSpec defines the desired state of RevertCommit
            properties:
              foo:
                description: Foo is an example field of RevertCommit. Edit revertcommit_types.go
                  to remove/update
                type: string
            type: object
          status:
            description: RevertCommitStatus defines the observed state of RevertCommit
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: scmproviders.promoter.argoproj.io
spec:
  group: promoter.argoproj.io
  names:
    kind: ScmProvider
    listKind: ScmProviderList
    plural: scmproviders
    singular: scmprovider
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ScmProvider is the Schema for the scmproviders API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ScmProviderSpec defines the desired state of ScmProvider
            properties:
              fake:
                description: Fake required configuration for Fake as the SCM provider
                properties:
                  domain:
                    type: string
                type: object
              github:
                description: GitHub required configuration for GitHub as the SCM provider
                properties:
                  appID:
                    description: AppID is the GitHub App ID.
                    format: int64
                    type: integer
                  domain:
                    type: string
                  installationID:
                    description: InstallationID is the GitHub App Installation ID.
                    format: int64
                    type: integer
                required:
                - appID
                - installationID
                type: object
              gitlab:
                description: GitLab required configuration for GitLab as the SCM provider
                properties:
                  domain:
                    type: string
                type: object
              secretRef:
                description: SecretRef contains the credentials required to auth to
                  a specific provider
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
            type: object
          status:
            description: ScmProviderStatus defines the observed state of ScmProvider
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: promoter
  name: promoter-controller-manager
  namespace: promoter-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: promoter
  name: promoter-leader-election-role
  namespace: promoter-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: promoter
  name: promoter-argocdcommitstatus-editor-role
rules:
- apiGroups:
  - promoter.argoproj.io
  resources:
  - argocdcommitstatuses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - promoter.argoproj.io
  resources:
  - argocdcommitstatuses/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: promoter
  name: promoter-argocdcommitstatus-viewer-role
rules:
- apiGroups:
  - promoter.argoproj.io
  resources:
  - argocdcommitstatuses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - promoter.argoproj.io
  resources:
  - argocdcommitstatuses/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: promoter
  name: promoter-controllerconfiguration-admin-role
rules:
- apiGroups:
  - promoter.argoproj.io
  resources:
  - controllerconfigurations
  verbs:
  - '*'
- apiGroups:
  - promoter.argoproj.io
  resources:
  - controllerconfigurations/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: promoter
  name: promoter-controllerconfiguration-editor-role
rules:
- apiGroups:
  - promoter.argoproj.io
  resources:
  - controllerconfigurations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - promoter.argoproj.io
  resources:
  - controllerconfigurations/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: promoter
  name: promoter-controllerconfiguration-viewer-role
rules:
- apiGroups:
  - promoter.argoproj.io
  resources:
  - controllerconfigurations
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - promoter.argoproj.io
  resources:
  - controllerconfigurations/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: promoter-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - promoter.argoproj.io
  resources:
  - argocdcommitstatuses
  - changetransferpolicies
  - commitstatuses
  - controllerconfigurations
  - gitrepositories
  - promotionstrategies
  - pullrequests
  - revertcommits
  - scmproviders
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - promoter.argoproj.io
  resources:
  - argocdcommitstatuses/finalizers
  - changetransferpolicies/finalizers
  - commitstatuses/finalizers
  - controllerconfigurations/finalizers
  - gitrepositories/finalizers
  - promotionstrategies/finalizers
  - pullrequests/finalizers
  - revertcommits/finalizers
  - scmproviders/finalizers
  verbs:
  - update
- apiGroups:
  - promoter.argoproj.io
  resources:
  - argocdcommitstatuses/status
  - changetransferpolicies/status
  - commitstatuses/status
  - controllerconfigurations/status
  - gitrepositories/status
  - promotionstrategies/status
  - pullrequests/status
  - revertcommits/status
  - scmproviders/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: promoter
  name: promoter-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: promoter
  name: promoter-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: promoter
  name: promoter-leader-election-rolebinding
  namespace: promoter-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: promoter-leader-election-role
subjects:
- kind: ServiceAccount
  name: promoter-controller-manager
  namespace: promoter-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: promoter
  name: promoter-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: promoter-manager-role
subjects:
- kind: ServiceAccount
  name: promoter-controller-manager
  namespace: promoter-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: promoter
  name: promoter-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: promoter-proxy-role
subjects:
- kind: ServiceAccount
  name: promoter-controller-manager
  namespace: promoter-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: promoter
    control-plane: controller-manager
  name: promoter-controller-manager-metrics-service
  namespace: promoter-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: promoter-webhook-receiver
  namespace: promoter-system
spec:
  ports:
  - port: 3333
    protocol: TCP
    targetPort: 3333
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: promoter
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: promoter
    control-plane: controller-manager
  name: promoter-controller-manager
  namespace: promoter-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: manager
              topologyKey: kubernetes.io/hostname
            weight: 100
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: deployment
              topologyKey: kubernetes.io/hostname
            weight: 5
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: quay.io/brancz/kube-rbac-proxy:v0.17.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /gitops-promoter
        image: quay.io/argoprojlabs/gitops-promoter:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: promoter-controller-manager
      terminationGracePeriodSeconds: 10
---
apiVersion: promoter.argoproj.io/v1alpha1
kind: ControllerConfiguration
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: promoter
    app.kubernetes.io/part-of: promoter
  name: promoter-controller-configuration
  namespace: promoter-system
spec:
  pullRequest:
    template:
      description: This PR is promoting the environment branch `{{ .ChangeTransferPolicy.Spec.ActiveBranch
        }}` which is currently on dry sha {{ .ChangeTransferPolicy.Status.Active.Dry.Sha
        }} to dry sha {{ .ChangeTransferPolicy.Status.Proposed.Dry.Sha }}.
      title: Promote {{ trunc 5 .ChangeTransferPolicy.Status.Proposed.Dry.Sha }} to
        `{{ .ChangeTransferPolicy.Spec.ActiveBranch }}`
