# see https://github.com/argoproj-labs/argocd-ephemeral-access/blob/main/.github/workflows/release.yaml
name: release

on:
  push:
    branches:
      - main
    paths:
      - 'docs/getting-started.md'
      - 'docs/tutorial-argocd-apps.md'
env:
  # If set in the repo env vars it will use this tag to build the release notes.
  # Useful when creating a release tag after a release candidate tags phase.
  GORELEASER_PREVIOUS_TAG: ${{vars.GORELEASER_PREVIOUS_TAG}}

defaults:
  run:
    shell: bash

jobs:
  release:
    runs-on: ubuntu-24.04
    if: |
      ${{github.repository == 'argoproj-labs/gitops-promoter' && contains(github.event.head_commit.message, 'docs: bump manifest versions to v')}}
    name: Release
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Extract version from commit message
        id: extract_version
        run: |
          VERSION=$(echo "${{ github.event.head_commit.message }}" | head -n1 | grep -oE 'v[0-9]+\.[0-9]+\.[0-9]+')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Create tag
        if: steps.extract_version.outputs.version != ''
        run: |
          git tag ${{ steps.extract_version.outputs.version }}
          git push origin ${{ steps.extract_version.outputs.version }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: "1.24"

      - name: Docker Login in quay.io
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        with:
          distribution: goreleaser
          version: v2.6.1
          args: release --clean --verbose
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
